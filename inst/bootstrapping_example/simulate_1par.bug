###########################################################################
#
# Use JAGS to simulate from an additive Bayesian Network
# where parameters were estimated from data using fitabn() in
# R abn library. Parameter distributions are given as discrete across
# a fine grid since these are non-conjugate models e.g. parameters
# may not conform to a standard probability distribution
#
##########################################################################
#  DAG Definition. rows are children, cols are parents
#        D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 Year Loc.x Loc.y
# D1     0  1  0  0  0  0  0  0  0   0    0     0     0
# D2     0  0  1  0  0  0  0  0  0   0    0     0     0
# D3     0  0  0  1  0  0  0  0  0   0    0     0     0
# D4     0  0  0  0  0  0  0  0  0   0    0     1     0
# D5     0  0  0  0  0  1  0  0  0   0    0     0     0
# D6     0  0  0  1  0  0  0  0  0   0    0     0     0
# D7     0  0  0  0  0  0  0  0  0   0    1     0     0
# D8     0  0  0  0  0  0  0  0  0   1    0     0     0
# D9     0  1  0  0  0  0  0  0  0   0    0     0     0
# D10    0  0  0  0  0  0  0  0  1   0    0     0     0
# Year   0  0  0  0  0  0  0  0  0   0    0     0     0
# Loc.x  0  0  0  0  0  0  1  0  0   0    0     0     0
# Loc.y  0  0  0  0  0  0  1  0  0   0    0     0     0
##########################################################################
###
### Model definition in JAGS language:

model {    

       # BINARY NODES
       #- NODE D1 -------------------------------------------------------------
       D1  ~ dbern(p1); #binary response 
       logit(p1)<- D1.b0 + D1.b1*D2;# logistic regression
       ### empirical densities from abn fitabn()
       D1.M0 ~ dcat(D1.p[     ,2]);   #D1.p[,2] is the vector of density values= f(x)
       D1.b0 <-     D1.p[D1.M0,1];#D1.p[,1] is the vector of x values
       D1.M1 ~ dcat(D1.p[     ,4]);   #D1.p[,4] is the vector of density values= f(x)
       D1.b1 <-     D1.p[D1.M1,3];#D1.p[,3] is the vector of x values
       #-----------------------------------------------------------------------
       #- NODE D2 -------------------------------------------------------------
       D2  ~ dbern(p2);  
       logit(p2)<- D2.b0 + D2.b1*D3;
       D2.M0 ~ dcat(D2.p[,     2]); 
       D2.b0 <-     D2.p[D2.M0,1];
       D2.M1 ~ dcat(D2.p[     ,4]); 
       D2.b1 <-     D2.p[D2.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D3 -------------------------------------------------------------
       D3  ~ dbern(p3);  
       logit(p3)<- D3.b0 + D3.b1*D4;
       D3.M0 ~ dcat(D3.p[,     2]); 
       D3.b0 <-     D3.p[D3.M0,1];
       D3.M1 ~ dcat(D3.p[     ,4]); 
       D3.b1 <-     D3.p[D3.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D4 -------------------------------------------------------------
       D4  ~ dbern(p4);  
       logit(p4)<- D4.b0 + D4.b1*Loc.x;
       D4.M0 ~ dcat(D4.p[,     2]); 
       D4.b0 <-     D4.p[D4.M0,1];
       D4.M1 ~ dcat(D4.p[     ,4]); 
       D4.b1 <-     D4.p[D4.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D5 -------------------------------------------------------------
       D5  ~ dbern(p5);  
       logit(p5)<- D5.b0 + D5.b1*D6;
       D5.M0 ~ dcat(D5.p[,     2]); 
       D5.b0 <-     D5.p[D5.M0,1];
       D5.M1 ~ dcat(D5.p[     ,4]); 
       D5.b1 <-     D5.p[D5.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D6 -------------------------------------------------------------
       D6  ~ dbern(p6);  
       logit(p6)<- D6.b0 + D6.b1*D4;
       D6.M0 ~ dcat(D6.p[,     2]); 
       D6.b0 <-     D6.p[D6.M0,1];
       D6.M1 ~ dcat(D6.p[     ,4]); 
       D6.b1 <-     D6.p[D6.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D7 -------------------------------------------------------------
       D7  ~ dbern(p7);  
       logit(p7)<- D7.b0 + D7.b1*Year;
       D7.M0 ~ dcat(D7.p[,     2]); 
       D7.b0 <-     D7.p[D7.M0,1];
       D7.M1 ~ dcat(D7.p[     ,4]); 
       D7.b1 <-     D7.p[D7.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D8 -------------------------------------------------------------
       D8  ~ dbern(p8);  
       logit(p8)<- D8.b0 + D8.b1*D10;
       D8.M0 ~ dcat(D8.p[,     2]); 
       D8.b0 <-     D8.p[D8.M0,1];
       D8.M1 ~ dcat(D8.p[     ,4]); 
       D8.b1 <-     D8.p[D8.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D9 -------------------------------------------------------------
       D9  ~ dbern(p9);  
       logit(p9)<- D9.b0 + D9.b1*D2;
       D9.M0 ~ dcat(D9.p[,     2]); 
       D9.b0 <-     D9.p[D9.M0,1];
       D9.M1 ~ dcat(D9.p[     ,4]); 
       D9.b1 <-     D9.p[D9.M1,3];
       #-----------------------------------------------------------------------
       #- NODE D10 -------------------------------------------------------------
       D10  ~ dbern(p10);  
       logit(p10)<- D10.b0 + D10.b1*D9;
       D10.M0 ~ dcat(D10.p[,      2]); 
       D10.b0 <-     D10.p[D10.M0,1];
       D10.M1 ~ dcat(D10.p[      ,4]); 
       D10.b1 <-     D10.p[D10.M1,3];
       #-----------------------------------------------------------------------

       # GAUSSIAN NODES FROM HERE
       #- NODE Year -------------------------------------------------------------
       Year  ~ dnorm(mu.Year,prec.Year); #Gaussian response 
       mu.Year<- Year.b0;# linear regression
       ### empirical densities from abn fitabn()
       Year.M ~ dcat(Year.p[      ,2]);#Year.p[,2] is the vector of density values= f(x)
       Year.b0 <-    Year.p[Year.M,1]; #Year.p[,1] is the vector of x values
       
       prec.Year.M ~ dcat(prec.Year.p[           ,2]);#precYear.p[,2] is the vector of density values= f(x)
       prec.Year <-       prec.Year.p[prec.Year.M,1]; #precYear.p[,1] is the vector of x values       
       #-----------------------------------------------------------------------

       #- NODE Loc.x -------------------------------------------------------------
       Loc.x  ~ dnorm(mu.Loc.x,prec.Loc.x);  
       mu.Loc.x<- Loc.x.b0+Loc.x.b1*D7;
       Loc.x.M0 ~ dcat(Loc.x.p[,        2]);
       Loc.x.b0  <-    Loc.x.p[Loc.x.M0,1];
       Loc.x.M1 ~ dcat(Loc.x.p[,        4]);
       Loc.x.b1  <-    Loc.x.p[Loc.x.M1,3];

       prec.Loc.x.M ~ dcat(prec.Loc.x.p[            ,2]);
       prec.Loc.x <-       prec.Loc.x.p[prec.Loc.x.M,1];    
       #-----------------------------------------------------------------------
       #- NODE Loc.y -------------------------------------------------------------
       Loc.y  ~ dnorm(mu.Loc.y,prec.Loc.y);  
       mu.Loc.y<- Loc.y.b0+Loc.y.b1*D7;
       Loc.y.M0 ~ dcat(Loc.y.p[,        2]);
       Loc.y.b0  <-    Loc.y.p[Loc.y.M0,1];
       Loc.y.M1 ~ dcat(Loc.y.p[,        4]);
       Loc.y.b1  <-    Loc.y.p[Loc.y.M1,3];

       prec.Loc.y.M ~ dcat(prec.Loc.y.p[            ,2]);
       prec.Loc.y <-       prec.Loc.y.p[prec.Loc.y.M,1];       
       #-----------------------------------------------------------------------
   
}


